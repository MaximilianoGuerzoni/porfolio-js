<header
	id="lading-header"
	class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>

	<nav class="flex flex-grow justify-end basis-0">

		<ul
			class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-300 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:pr-4 [&>li>a]:py-2 "
		>
			<li><a href="#sobremi">SOBRE MI</a></li>
			<li><a href="#skills">SKILLS</a></li>
			<li><a href="#proyectos">PROYECTOS</a></li>
			<li><a href="#contacto">CONTACTO</a></li>
		</ul>
	</nav>
	<div
    id="menu-backdrop"
    class={`
      absolute bg-gray-400 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
  >
  </div>
</header>

<script>
	const listItem = document.querySelectorAll("#lading-header li");
	const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement

	listItem.forEach((item) => {
		item.addEventListener("mouseenter", () => {
			const { left, top, width, height } = item.getBoundingClientRect();

			menuBackDrop.style.setProperty("--left", `${left}px`);
			menuBackDrop.style.setProperty("--top", `${top}px`);
			menuBackDrop.style.setProperty("--width", `${width}px`);
			menuBackDrop.style.setProperty("--height", `${height}px`);

			menuBackDrop.style.opacity = "1";
			menuBackDrop.style.visibility = "visible";
		});

		item.addEventListener("mouseleave", () => {
			menuBackDrop.style.opacity = "0";
			menuBackDrop.style.visibility = "hidden";
		});
	});
</script>

<script>
	const header = document.querySelector("#lading-header") as HTMLElement;

	const observerOption = {
		root: null,
		rootMargin: "0px",
		threshold: 0.9,
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			const { isIntersecting } = entry;
			if (isIntersecting) {
				const color = entry.target.getAttribute("data-header-color");
				header.style.color = color;
			}
		});
	}, observerOption);

	const $sections = document.querySelectorAll(".landing-section");
	$sections.forEach((section) => observer.observe(section));
</script>

